Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> NUMBER ADD NUMBER
Rule 2     expression -> NUMBER SUBTRACT NUMBER
Rule 3     expression -> NUMBER MULTIPLY NUMBER
Rule 4     expression -> NUMBER DIVIDE NUMBER
Rule 5     expression -> NUMBER EXPO NUMBER
Rule 6     expression -> NAME ADD NUMBER
Rule 7     expression -> NAME SUBTRACT NUMBER
Rule 8     expression -> NAME MULTIPLY NUMBER
Rule 9     expression -> NAME DIVIDE NUMBER
Rule 10    expression -> NAME EXPO NUMBER
Rule 11    expression -> NUMBER ADD NAME
Rule 12    expression -> NUMBER SUBTRACT NAME
Rule 13    expression -> NUMBER MULTIPLY NAME
Rule 14    expression -> NUMBER DIVIDE NAME
Rule 15    expression -> NUMBER EXPO NAME
Rule 16    expression -> NAME ADD NAME
Rule 17    expression -> NAME SUBTRACT NAME
Rule 18    expression -> NAME MULTIPLY NAME
Rule 19    expression -> NAME DIVIDE NAME
Rule 20    expression -> NAME EXPO NAME
Rule 21    expression -> GREET LPAREN NAME RPAREN
Rule 22    expression -> NAME LPAREN NUMBER RPAREN
Rule 23    expression -> NAME LPAREN STRING LPAREN RPAREN RPAREN
Rule 24    expression -> STACKASCII LPAREN RPAREN
Rule 25    expression -> GETSTACK LPAREN NUMBER RPAREN
Rule 26    expression -> GETSTACK LPAREN STRING RPAREN
Rule 27    expression -> NAME EQUALS NUMBER
Rule 28    expression -> NAME EQUALS STRING
Rule 29    expression -> NAME

Terminals, with rules where they appear

ADD                  : 1 6 11 16
DIVIDE               : 4 9 14 19
EQUALS               : 27 28
EXPO                 : 5 10 15 20
GETSTACK             : 25 26
GREET                : 21
LPAREN               : 21 22 23 23 24 25 26
MULTIPLY             : 3 8 13 18
NAME                 : 6 7 8 9 10 11 12 13 14 15 16 16 17 17 18 18 19 19 20 20 21 22 23 27 28 29
NUMBER               : 1 1 2 2 3 3 4 4 5 5 6 7 8 9 10 11 12 13 14 15 22 25 27
RPAREN               : 21 22 23 23 24 25 26
STACKASCII           : 24
STRING               : 23 26 28
SUBTRACT             : 2 7 12 17
error                : 

Nonterminals, with rules where they appear

expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . NUMBER ADD NUMBER
    (2) expression -> . NUMBER SUBTRACT NUMBER
    (3) expression -> . NUMBER MULTIPLY NUMBER
    (4) expression -> . NUMBER DIVIDE NUMBER
    (5) expression -> . NUMBER EXPO NUMBER
    (6) expression -> . NAME ADD NUMBER
    (7) expression -> . NAME SUBTRACT NUMBER
    (8) expression -> . NAME MULTIPLY NUMBER
    (9) expression -> . NAME DIVIDE NUMBER
    (10) expression -> . NAME EXPO NUMBER
    (11) expression -> . NUMBER ADD NAME
    (12) expression -> . NUMBER SUBTRACT NAME
    (13) expression -> . NUMBER MULTIPLY NAME
    (14) expression -> . NUMBER DIVIDE NAME
    (15) expression -> . NUMBER EXPO NAME
    (16) expression -> . NAME ADD NAME
    (17) expression -> . NAME SUBTRACT NAME
    (18) expression -> . NAME MULTIPLY NAME
    (19) expression -> . NAME DIVIDE NAME
    (20) expression -> . NAME EXPO NAME
    (21) expression -> . GREET LPAREN NAME RPAREN
    (22) expression -> . NAME LPAREN NUMBER RPAREN
    (23) expression -> . NAME LPAREN STRING LPAREN RPAREN RPAREN
    (24) expression -> . STACKASCII LPAREN RPAREN
    (25) expression -> . GETSTACK LPAREN NUMBER RPAREN
    (26) expression -> . GETSTACK LPAREN STRING RPAREN
    (27) expression -> . NAME EQUALS NUMBER
    (28) expression -> . NAME EQUALS STRING
    (29) expression -> . NAME

    NUMBER          shift and go to state 2
    NAME            shift and go to state 3
    GREET           shift and go to state 4
    STACKASCII      shift and go to state 5
    GETSTACK        shift and go to state 6

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> NUMBER . ADD NUMBER
    (2) expression -> NUMBER . SUBTRACT NUMBER
    (3) expression -> NUMBER . MULTIPLY NUMBER
    (4) expression -> NUMBER . DIVIDE NUMBER
    (5) expression -> NUMBER . EXPO NUMBER
    (11) expression -> NUMBER . ADD NAME
    (12) expression -> NUMBER . SUBTRACT NAME
    (13) expression -> NUMBER . MULTIPLY NAME
    (14) expression -> NUMBER . DIVIDE NAME
    (15) expression -> NUMBER . EXPO NAME

    ADD             shift and go to state 7
    SUBTRACT        shift and go to state 8
    MULTIPLY        shift and go to state 9
    DIVIDE          shift and go to state 10
    EXPO            shift and go to state 11


state 3

    (6) expression -> NAME . ADD NUMBER
    (7) expression -> NAME . SUBTRACT NUMBER
    (8) expression -> NAME . MULTIPLY NUMBER
    (9) expression -> NAME . DIVIDE NUMBER
    (10) expression -> NAME . EXPO NUMBER
    (16) expression -> NAME . ADD NAME
    (17) expression -> NAME . SUBTRACT NAME
    (18) expression -> NAME . MULTIPLY NAME
    (19) expression -> NAME . DIVIDE NAME
    (20) expression -> NAME . EXPO NAME
    (22) expression -> NAME . LPAREN NUMBER RPAREN
    (23) expression -> NAME . LPAREN STRING LPAREN RPAREN RPAREN
    (27) expression -> NAME . EQUALS NUMBER
    (28) expression -> NAME . EQUALS STRING
    (29) expression -> NAME .

    ADD             shift and go to state 12
    SUBTRACT        shift and go to state 13
    MULTIPLY        shift and go to state 14
    DIVIDE          shift and go to state 15
    EXPO            shift and go to state 16
    LPAREN          shift and go to state 17
    EQUALS          shift and go to state 18
    $end            reduce using rule 29 (expression -> NAME .)


state 4

    (21) expression -> GREET . LPAREN NAME RPAREN

    LPAREN          shift and go to state 19


state 5

    (24) expression -> STACKASCII . LPAREN RPAREN

    LPAREN          shift and go to state 20


state 6

    (25) expression -> GETSTACK . LPAREN NUMBER RPAREN
    (26) expression -> GETSTACK . LPAREN STRING RPAREN

    LPAREN          shift and go to state 21


state 7

    (1) expression -> NUMBER ADD . NUMBER
    (11) expression -> NUMBER ADD . NAME

    NUMBER          shift and go to state 22
    NAME            shift and go to state 23


state 8

    (2) expression -> NUMBER SUBTRACT . NUMBER
    (12) expression -> NUMBER SUBTRACT . NAME

    NUMBER          shift and go to state 24
    NAME            shift and go to state 25


state 9

    (3) expression -> NUMBER MULTIPLY . NUMBER
    (13) expression -> NUMBER MULTIPLY . NAME

    NUMBER          shift and go to state 26
    NAME            shift and go to state 27


state 10

    (4) expression -> NUMBER DIVIDE . NUMBER
    (14) expression -> NUMBER DIVIDE . NAME

    NUMBER          shift and go to state 28
    NAME            shift and go to state 29


state 11

    (5) expression -> NUMBER EXPO . NUMBER
    (15) expression -> NUMBER EXPO . NAME

    NUMBER          shift and go to state 30
    NAME            shift and go to state 31


state 12

    (6) expression -> NAME ADD . NUMBER
    (16) expression -> NAME ADD . NAME

    NUMBER          shift and go to state 33
    NAME            shift and go to state 32


state 13

    (7) expression -> NAME SUBTRACT . NUMBER
    (17) expression -> NAME SUBTRACT . NAME

    NUMBER          shift and go to state 35
    NAME            shift and go to state 34


state 14

    (8) expression -> NAME MULTIPLY . NUMBER
    (18) expression -> NAME MULTIPLY . NAME

    NUMBER          shift and go to state 37
    NAME            shift and go to state 36


state 15

    (9) expression -> NAME DIVIDE . NUMBER
    (19) expression -> NAME DIVIDE . NAME

    NUMBER          shift and go to state 39
    NAME            shift and go to state 38


state 16

    (10) expression -> NAME EXPO . NUMBER
    (20) expression -> NAME EXPO . NAME

    NUMBER          shift and go to state 41
    NAME            shift and go to state 40


state 17

    (22) expression -> NAME LPAREN . NUMBER RPAREN
    (23) expression -> NAME LPAREN . STRING LPAREN RPAREN RPAREN

    NUMBER          shift and go to state 42
    STRING          shift and go to state 43


state 18

    (27) expression -> NAME EQUALS . NUMBER
    (28) expression -> NAME EQUALS . STRING

    NUMBER          shift and go to state 44
    STRING          shift and go to state 45


state 19

    (21) expression -> GREET LPAREN . NAME RPAREN

    NAME            shift and go to state 46


state 20

    (24) expression -> STACKASCII LPAREN . RPAREN

    RPAREN          shift and go to state 47


state 21

    (25) expression -> GETSTACK LPAREN . NUMBER RPAREN
    (26) expression -> GETSTACK LPAREN . STRING RPAREN

    NUMBER          shift and go to state 48
    STRING          shift and go to state 49


state 22

    (1) expression -> NUMBER ADD NUMBER .

    $end            reduce using rule 1 (expression -> NUMBER ADD NUMBER .)


state 23

    (11) expression -> NUMBER ADD NAME .

    $end            reduce using rule 11 (expression -> NUMBER ADD NAME .)


state 24

    (2) expression -> NUMBER SUBTRACT NUMBER .

    $end            reduce using rule 2 (expression -> NUMBER SUBTRACT NUMBER .)


state 25

    (12) expression -> NUMBER SUBTRACT NAME .

    $end            reduce using rule 12 (expression -> NUMBER SUBTRACT NAME .)


state 26

    (3) expression -> NUMBER MULTIPLY NUMBER .

    $end            reduce using rule 3 (expression -> NUMBER MULTIPLY NUMBER .)


state 27

    (13) expression -> NUMBER MULTIPLY NAME .

    $end            reduce using rule 13 (expression -> NUMBER MULTIPLY NAME .)


state 28

    (4) expression -> NUMBER DIVIDE NUMBER .

    $end            reduce using rule 4 (expression -> NUMBER DIVIDE NUMBER .)


state 29

    (14) expression -> NUMBER DIVIDE NAME .

    $end            reduce using rule 14 (expression -> NUMBER DIVIDE NAME .)


state 30

    (5) expression -> NUMBER EXPO NUMBER .

    $end            reduce using rule 5 (expression -> NUMBER EXPO NUMBER .)


state 31

    (15) expression -> NUMBER EXPO NAME .

    $end            reduce using rule 15 (expression -> NUMBER EXPO NAME .)


state 32

    (16) expression -> NAME ADD NAME .

    $end            reduce using rule 16 (expression -> NAME ADD NAME .)


state 33

    (6) expression -> NAME ADD NUMBER .

    $end            reduce using rule 6 (expression -> NAME ADD NUMBER .)


state 34

    (17) expression -> NAME SUBTRACT NAME .

    $end            reduce using rule 17 (expression -> NAME SUBTRACT NAME .)


state 35

    (7) expression -> NAME SUBTRACT NUMBER .

    $end            reduce using rule 7 (expression -> NAME SUBTRACT NUMBER .)


state 36

    (18) expression -> NAME MULTIPLY NAME .

    $end            reduce using rule 18 (expression -> NAME MULTIPLY NAME .)


state 37

    (8) expression -> NAME MULTIPLY NUMBER .

    $end            reduce using rule 8 (expression -> NAME MULTIPLY NUMBER .)


state 38

    (19) expression -> NAME DIVIDE NAME .

    $end            reduce using rule 19 (expression -> NAME DIVIDE NAME .)


state 39

    (9) expression -> NAME DIVIDE NUMBER .

    $end            reduce using rule 9 (expression -> NAME DIVIDE NUMBER .)


state 40

    (20) expression -> NAME EXPO NAME .

    $end            reduce using rule 20 (expression -> NAME EXPO NAME .)


state 41

    (10) expression -> NAME EXPO NUMBER .

    $end            reduce using rule 10 (expression -> NAME EXPO NUMBER .)


state 42

    (22) expression -> NAME LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 50


state 43

    (23) expression -> NAME LPAREN STRING . LPAREN RPAREN RPAREN

    LPAREN          shift and go to state 51


state 44

    (27) expression -> NAME EQUALS NUMBER .

    $end            reduce using rule 27 (expression -> NAME EQUALS NUMBER .)


state 45

    (28) expression -> NAME EQUALS STRING .

    $end            reduce using rule 28 (expression -> NAME EQUALS STRING .)


state 46

    (21) expression -> GREET LPAREN NAME . RPAREN

    RPAREN          shift and go to state 52


state 47

    (24) expression -> STACKASCII LPAREN RPAREN .

    $end            reduce using rule 24 (expression -> STACKASCII LPAREN RPAREN .)


state 48

    (25) expression -> GETSTACK LPAREN NUMBER . RPAREN

    RPAREN          shift and go to state 53


state 49

    (26) expression -> GETSTACK LPAREN STRING . RPAREN

    RPAREN          shift and go to state 54


state 50

    (22) expression -> NAME LPAREN NUMBER RPAREN .

    $end            reduce using rule 22 (expression -> NAME LPAREN NUMBER RPAREN .)


state 51

    (23) expression -> NAME LPAREN STRING LPAREN . RPAREN RPAREN

    RPAREN          shift and go to state 55


state 52

    (21) expression -> GREET LPAREN NAME RPAREN .

    $end            reduce using rule 21 (expression -> GREET LPAREN NAME RPAREN .)


state 53

    (25) expression -> GETSTACK LPAREN NUMBER RPAREN .

    $end            reduce using rule 25 (expression -> GETSTACK LPAREN NUMBER RPAREN .)


state 54

    (26) expression -> GETSTACK LPAREN STRING RPAREN .

    $end            reduce using rule 26 (expression -> GETSTACK LPAREN STRING RPAREN .)


state 55

    (23) expression -> NAME LPAREN STRING LPAREN RPAREN . RPAREN

    RPAREN          shift and go to state 56


state 56

    (23) expression -> NAME LPAREN STRING LPAREN RPAREN RPAREN .

    $end            reduce using rule 23 (expression -> NAME LPAREN STRING LPAREN RPAREN RPAREN .)

